{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","messageWrapper","messageAvatar","src","avatar","alt","messageDialogWindow","messageName","name","messageText","message","messageTime","time","messageData1","messageData2","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","greeting","value","onChange","superInputStyle","btn","counter","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","console","log","newUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","superCheckboxWrapper","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.47a31804.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__1DRDM\",\"messageDialogWindow\":\"Message_messageDialogWindow__kJS2v\",\"messageAvatar\":\"Message_messageAvatar__26aQy\",\"messageName\":\"Message_messageName__16Z99\",\"messageText\":\"Message_messageText__tMBZ7\",\"messageTime\":\"Message_messageTime__3SP_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\",\"btn\":\"Greeting_btn__1zEPl\",\"superInputStyle\":\"Greeting_superInputStyle__3wBMN\",\"greeting\":\"Greeting_greeting__21ydZ\",\"counter\":\"Greeting_counter__2pKsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\",\"superInputStyle\":\"SuperInputText_superInputStyle__2o_cd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"superCheckboxWrapper\":\"HW4_superCheckboxWrapper__3Fdb6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from \"react\";\nimport s from './Message.module.css'\ntype MessagePropsType = {\n  avatar: string\n  name: string\n  message: string\n  time: string\n}\n\n\nfunction Message(props: MessagePropsType) {\n  return (\n    <div className={s.messageWrapper}>\n      <img className={s.messageAvatar} src={props.avatar} alt=\"message-avatar\"/>\n\n      <div className={s.messageDialogWindow}>\n        <span className={s.messageName}>{props.name}</span>\n        <p className={s.messageText}>{props.message}</p>\n        <span className={s.messageTime}>{props.time}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\n\nconst messageData1 = {\n    avatar: \"https://www.clipartmax.com/png/full/466-4663678_owls-‿✿⁀°••○-subject-adorable-owl-cute-owl-svg.png\",\n    name: \"Ignat\",\n    message: \"Hello, Dear Friend !\",\n    time: \"12:15\",\n};\n\nconst messageData2 = {\n  avatar: \"https://img.pngio.com/cute-owl-png-clipart-gallery-yopriceville-high-quality-images-cute-owl-png-8000_7072.png\",\n  name: \"Viktor\",\n  message: \"Hey, How are you?\",\n  time: \"12:20\",\n};\n\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            <Message\n                avatar={messageData1.avatar}\n                name={messageData1.name}\n                message={messageData1.message}\n                time={messageData1.time}\n            />\n\n          <Message\n            avatar={messageData2.avatar}\n            name={messageData2.name}\n            message={messageData2.message}\n            time={messageData2.time}\n          />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };\n\n    return (\n        <div>\n          {props.affair.name}\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => props.setFilter('all');\n    const setHigh = () => props.setFilter('high');\n    const setMiddle = () => props.setFilter('middle');\n    const setLow = () => props.setFilter('low');\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high';\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: string\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n  {_id: 1, name: \"React\", priority: \"high\"},\n  {_id: 2, name: \"anime\", priority: \"low\"},\n  {_id: 3, name: \"games\", priority: \"low\"},\n  {_id: 4, name: \"work\", priority: \"high\"},\n  {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // need to fix any\n  if (filter === \"all\") {\n    return affairs\n  } else {\n    return affairs.filter((a) => a.priority === filter)\n  }\n}\n\n\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n  return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n  const [filter, setFilter] = useState<FilterType>(\"all\");\n\n  const filteredAffairs = filterAffairs(affairs, filter);\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n  return (\n    <div>\n      <hr/>\n      homeworks 2\n\n      {/*should work (должно работать)*/}\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n\n      <hr/>\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n      <hr/>\n    </div>\n  );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=> void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : ''; // need to fix with (?:)\n\n    return (\n        <div className={s.greeting}>\n            <input value={name} onChange={setNameCallback} className={`${inputClass} ${s.superInputStyle}`}/>\n            <span>{error}</span>\n            <button className={s.btn} onClick={addUser}>add</button>\n            <span className={s.counter}>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n  users: Array<UserType> // need to fix any\n  addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\n\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> =\n  ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<string>('');\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      setName(e.currentTarget.value);\n      setError('');\n    };\n    const addUser = () => {\n      if (name.trim() !== '') {\n        addUserCallback(name);\n        setName('');\n        setError('');\n        alert(`Hello, ${name}`)\n      } else {\n        setError('Title is required')\n      }\n    };\n\n    const totalUsers = users.length;\n\n    return (\n      <Greeting\n        name={name}\n        setNameCallback={setNameCallback}\n        addUser={addUser}\n        error={error}\n        totalUsers={totalUsers}\n      />\n    );\n  }\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([\n    ]);\n  console.log(users);\n\n\n  const addUserCallback = (name: string) => {\n      const newUser = {_id: v1(), name: name};\n      const newUsers = [newUser, ...users];\n        setUsers(newUsers);\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value.trim());\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInputStyle}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n  {\n    red, className,\n    ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n  }\n) => {\n  const finalClassName = `${red ? s.red : s.default} ${className}`;\n  return (\n    <button\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n  const [text, setText] = useState<string>(\" \");\n  const error = text ? \"\" : \"error\";\n  const showAlert = () => {\n    if (error) {\n      alert(\"введите текст...\");\n    } else {\n      alert(text); // если нет ошибки показать текст\n    }\n  }\n\n  const [checked, setChecked] = useState<boolean>(false);\n  const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n  return (\n    <div>\n      <hr/>\n      homeworks 4\n\n      <div className={s.column}>\n        {/*should work (должно работать)*/}\n        <SuperInputText\n          value={text}\n          onChangeText={setText}\n          onEnter={showAlert}\n          error={error}\n\n          // className={s.blue} // проверьте, рабоет ли смешивание классов\n        />\n\n        <div className={s.superCheckboxWrapper}>\n          {/*should work (должно работать)*/}\n          <SuperButton\n            red={false} // пропсу с булевым значением не обязательно указывать true\n            onClick={showAlert}\n          >\n            delete {/*// название кнопки попадёт в children*/}\n          </SuperButton>\n\n          {/*should work (должно работать)*/}\n          <SuperCheckbox\n            checked={checked}\n            onChangeChecked={setChecked}\n          >\n            some text {/*// этот текст попадёт в children*/}\n          </SuperCheckbox>\n\n          {/*// onChange тоже должен работать*/}\n          <SuperCheckbox checked={checked} onChange={testOnChange}/>\n        </div>\n      </div>\n\n      <hr/>\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeSuperInputText/>*/}\n      {/*<AlternativeSuperButton/>*/}\n      {/*<AlternativeSuperCheckbox/>*/}\n      <hr/>\n    </div>\n  );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}